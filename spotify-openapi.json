{
  "openapi": "3.0.0",
  "info": {
    "title": "Spotify Web API",
    "description": "Spotify Web API lets you fetch music data, manage playlists, search tracks, and control playback.\nThis OpenAPI spec includes token-based authentication (OAuth 2.0), playlist retrieval, track search, and authorization URL details.\n\n## How to get Client ID and Client Secret\n\n1. Visit the [Spotify Developer Dashboard](https://developer.spotify.com/dashboard)\n2. Log in with your Spotify account\n3. Select **Create an App**\n4. Fill in the details, such as App name, description, and others.\n5. Once created, you can see your **Client ID** and an option to **View Client Secret**\n6. Set your Redirect URI which is required for Authorization Code Flow.\n7. Use these credentials to obtain an **OAuth token**\n\n## Authorization code flow steps\n\n- **Authorization URL**: `https://accounts.spotify.com/authorize`\n- **Token URL**: `https://accounts.spotify.com/api/token`\n- Required scopes vary based on the endpoint, such as `playlist-read-private` or `user-library-read`.\n\n## Example: Get access token using cURL\n\nOnce you have obtained the authorization code via redirect, you can exchange it for an access token using the following `curl` command:\n\n```bash\ncurl -X POST https://accounts.spotify.com/api/token \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"grant_type=authorization_code\" \\\n  -d \"code=YOUR_AUTHORIZATION_CODE\" \\\n  -d \"redirect_uri=YOUR_REGISTERED_REDIRECT_URI\" \\\n  -u YOUR_CLIENT_ID:YOUR_CLIENT_SECRET\n```\n\n- Replace `YOUR_AUTHORIZATION_CODE` with the code you got after user consent.\n- Replace `YOUR_REGISTERED_REDIRECT_URI` with the same redirect URI you used during authorization.\n- Use `-u` to pass `client_id` and `client_secret` in basic auth format.\n\nThe response will include:\n\n```json\n{\n  \"access_token\": \"...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3600,\n  \"refresh_token\": \"...\",\n  \"scope\": \"playlist-read-private\"\n}\n",
    "contact": {
      "name": "Spotify Developer Support",
      "url": "https://developer.spotify.com",
      "email": "support@spotify.com"
    },
    "license": {
      "name": "Spotify Developer TOS",
      "url": "https://developer.spotify.com/terms/"
    },
    "version": "1.0.3"
  },
  "servers": [
    {
      "url": "https://api.spotify.com/v1",
      "description": "Production Server"
    }
  ],
  "security": [
    {
      "OAuth2": [
        "playlist-read-private",
        "user-read-private"
      ]
    }
  ],
  "tags": [
    {
      "name": "Playlists",
      "description": "Access and manage user playlists"
    },
    {
      "name": "Search",
      "description": "Search for music"
    },
    {
      "name": "Authorization",
      "description": "OAuth 2.0 flow for accessing protected endpoints"
    }
  ],
  "paths": {
    "/me/playlists": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Get current user's playlists",
        "description": "Returns a list of the current user's playlists.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of playlists to return (default 20)",
            "required": false,
            "schema": { "type": "integer", "default": 20 }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The index of the first playlist to return",
            "required": false,
            "schema": { "type": "integer", "default": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of playlists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inline_response_200" },
                "example": {
                  "items": [
                    {
                      "name": "Coding Vibes",
                      "id": "37i9dQZF1DXdPec7aLTmlC",
                      "public": true,
                      "tracks": { "total": 25 }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          { "OAuth2": ["playlist-read-private"] }
        ]
      }
    },
    "/search": {
      "get": {
        "tags": ["Search"],
        "summary": "Search for a track",
        "description": "Search Spotify content (track, album, artist)",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The search query keyword (e.g., song name)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The item type to search (e.g., track, album)",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["album", "artist", "playlist", "track", "show", "episode"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results for tracks",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inline_response_200_1" },
                "example": {
                  "tracks": {
                    "items": [
                      {
                        "name": "Shape of You",
                        "id": "7qiZfU4dY1lWllzX7mPBI3",
                        "artists": [{ "name": "Ed Sheeran" }]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          { "OAuth2": ["user-library-read"] }
        ]
      }
    },
    "/api/token": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Exchange authorization code for access token",
        "description": "Use this endpoint to exchange the authorization code obtained via the Spotify OAuth Authorization URL for an access token and refresh token.\n\n**Note:** Include your `client_id` and `client_secret` as HTTP Basic Auth credentials (Base64 encoded) or pass them via the `-u` flag in `curl`.\n\n**Example request:**\n```bash\ncurl -X POST https://accounts.spotify.com/api/token \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"grant_type=authorization_code\" \\\n  -d \"code=YOUR_AUTHORIZATION_CODE\" \\\n  -d \"redirect_uri=YOUR_REGISTERED_REDIRECT_URI\" \\\n  -u YOUR_CLIENT_ID:YOUR_CLIENT_SECRET\n```",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": { "type": "string", "example": "authorization_code" },
                  "code": { "type": "string", "example": "YOUR_AUTHORIZATION_CODE" },
                  "redirect_uri": { "type": "string", "example": "YOUR_REGISTERED_REDIRECT_URI" }
                },
                "required": ["grant_type", "code", "redirect_uri"]
              }
            }
          }
        },
        "security": [{ "OAuth2": [] }],
        "responses": {
          "200": {
            "description": "Access token returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": { "type": "string", "example": "BQD1..." },
                    "token_type": { "type": "string", "example": "Bearer" },
                    "expires_in": { "type": "integer", "example": 3600 },
                    "refresh_token": { "type": "string", "example": "AQD3..." },
                    "scope": { "type": "string", "example": "playlist-read-private" }
                  }
                },
                "example": {
                  "access_token": "BQDgYy8X...",
                  "token_type": "Bearer",
                  "expires_in": 3600,
                  "refresh_token": "AQBe9pY3...",
                  "scope": "playlist-read-private user-read-private"
                }
              }
            }
          },
          "400": { "description": "Invalid request or missing parameters" },
          "401": { "description": "Unauthorized - invalid client credentials" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Playlist": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "My Favorite Tracks" },
          "id": { "type": "string", "example": "5tHBXYW4QbkF14gWmQkm5H" },
          "public": { "type": "boolean", "example": true },
          "tracks": { "$ref": "#/components/schemas/Playlist_tracks" }
        }
      },
      "Track": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Shape of You" },
          "id": { "type": "string", "example": "7qiZfU4dY1lWllzX7mPBI3" },
          "artists": { "type": "array", "items": { "$ref": "#/components/schemas/Track_artists" } }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/Playlist" } }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "tracks": { "$ref": "#/components/schemas/inline_response_200_1_tracks" }
        }
      },
      "Playlist_tracks": {
        "type": "object",
        "properties": { "total": { "type": "integer", "example": 12 } }
      },
      "Track_artists": {
        "type": "object",
        "properties": { "name": { "type": "string", "example": "Ed Sheeran" } }
      },
      "inline_response_200_1_tracks": {
        "type": "object",
        "properties": {
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/Track" } }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.spotify.com/authorize",
            "tokenUrl": "https://accounts.spotify.com/api/token",
            "scopes": {
              "playlist-read-private": "Read private playlists",
              "user-read-private": "Read user's private info",
              "user-library-read": "Access user's saved tracks"
            }
          }
        }
      }
    }
  }
}
